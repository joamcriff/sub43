from typing import List, Union

from graphite.data.dataset_utils import load_default_dataset
from graphite.data.distance import geom_edges, euc_2d_edges, man_2d_edges
from graphite.solvers.base_solver import BaseSolver
from graphite.protocol import GraphV1Problem, GraphV2Problem, GraphV2ProblemMulti
from graphite.utils.graph_utils import timeout
import numpy as np
import time
import asyncio
import random

import bittensor as bt
import os
import subprocess
import tempfile
from io import StringIO


# from greedy_solver import NearestNeighbourSolver

class LKHSolver(BaseSolver):
    def __init__(self, problem_types: List[Union[GraphV1Problem, GraphV2Problem]] = [GraphV1Problem(n_nodes=2),
                                                                                     GraphV1Problem(n_nodes=2,
                                                                                                    directed=True,
                                                                                                    problem_type='General TSP')]):
        super().__init__(problem_types=problem_types)
        self.lkh_path = "./LKH-3.0.11/LKH"

    def create_problem_file(self, distance_matrix):
        dimension = len(distance_matrix)
        problem_file_content = f"""NAME: TSP
        TYPE: TSP
        DIMENSION: {dimension}
        EDGE_WEIGHT_TYPE: EXPLICIT
        EDGE_WEIGHT_FORMAT: FULL_MATRIX
        EDGE_WEIGHT_SECTION
        """
        # Sử dụng StringIO và np.savetxt để tạo chuỗi
        buffer = StringIO()
        np.savetxt(buffer, distance_matrix, fmt='%d', delimiter=' ')
        matrix_string = buffer.getvalue().strip()
        problem_file_content += matrix_string + "\nEOF\n"
        return problem_file_content

    def create_parameter_file(self, problem_file_path, tour_file_path, nodes=5000):
        trial = int(500 * 5000 / nodes)
        parameter_file_content = f"""PROBLEM_FILE = {problem_file_path}
        TOUR_FILE = {tour_file_path}
        INITIAL_PERIOD = 100
        PRECISION = 1e-04
        RUNS = 1
        INITIAL_TOUR_ALGORITHM = GREEDY
        MAX_TRIALS = {trial}
        TIME_LIMIT = 18
        TOTAL_TIME_LIMIT = 18
        """
        return parameter_file_content

    async def solve(self, formatted_problem, future_id: int) -> List[int]:
        with tempfile.NamedTemporaryFile('w+', prefix='problem_', suffix='.txt', delete=False) as problem_file, \
                tempfile.NamedTemporaryFile('w+', prefix='param_', suffix='.txt', delete=False) as parameter_file, \
                tempfile.NamedTemporaryFile('r+', prefix='tour_', suffix='.txt', delete=False) as tour_file:
            problem_file_content = self.create_problem_file(formatted_problem)
            problem_file.write(problem_file_content)
            problem_file.flush()

            parameter_file_content = self.create_parameter_file(problem_file.name, tour_file.name,
                                                                len(formatted_problem))
            parameter_file.write(parameter_file_content)
            parameter_file.flush()

            # Run LKH
            subprocess.run([self.lkh_path, parameter_file.name], check=True)
            # Read the tour file
            tour_file.seek(0)
            tour = self.parse_tour_file(tour_file.name)

        # Clean up temporary files
        os.remove(problem_file.name)
        os.remove(parameter_file.name)
        os.remove(tour_file.name)

        # total_distance = self.calculate_total_distance(tour, formatted_problem)

        # return tour
        return tour

    def calculate_total_distance(self, tour, distance_matrix):
        total_distance = 0
        for i in range(len(tour)):
            total_distance += distance_matrix[tour[i]][tour[(i + 1) % len(tour)]]
        return total_distance

    def parse_tour_file(self, tour_file_path):
        tour = []
        with open(tour_file_path, 'r') as file:
            in_tour_section = False
            for line in file:
                if line.strip() == 'TOUR_SECTION':
                    in_tour_section = True
                elif line.strip() == '-1':
                    break
                elif in_tour_section:
                    tour.append(int(line.strip()) - 1)  # LKH uses 1-based indexing
        tour.append(tour[0])
        return tour

    def problem_transformations(self, problem: Union[GraphV1Problem, GraphV2Problem]):
        return problem.edges


if __name__ == "__main__":
    ## Test case for GraphV2Problem
    class Mock:
        def __init__(self) -> None:
            pass

        def recreate_edges(self, problem: Union[GraphV2Problem, GraphV2ProblemMulti]):
            node_coords_np = self.loaded_datasets[problem.dataset_ref]["data"]
            node_coords = np.array([node_coords_np[i][1:] for i in problem.selected_ids])
            if problem.cost_function == "Geom":
                return geom_edges(node_coords)
            elif problem.cost_function == "Euclidean2D":
                return euc_2d_edges(node_coords)
            elif problem.cost_function == "Manhatten2D":
                return man_2d_edges(node_coords)
            else:
                return "Only Geom, Euclidean2D, and Manhatten2D supported for now."


    mock = Mock()

    load_default_dataset(mock)

    n_nodes = 2467
    # randomly select n_nodes indexes from the selected graph

    selected_ids = [144789, 1182491, 1542768, 1311337, 1051510, 110924, 674157, 855647, 418913, 372625, 939864, 740245, 1697352, 340309, 302283, 1796784, 1822092, 261673, 441611, 1733704, 462311, 5382, 1337091, 1354296, 1854215, 182961, 1443576, 1441907, 217212, 1773662, 1539895, 1172747, 1002048, 1832894, 1300349, 363357, 1896981, 1225013, 868774, 1258132, 470488, 1474993, 1398341, 21034, 1745570, 1393824, 1876868, 1163012, 1027794, 657046, 141402, 76583, 414104, 258399, 572719, 525868, 216678, 1474333, 237395, 276927, 465352, 326882, 1172141, 380273, 294471, 1646271, 1537621, 771720, 635555, 20493, 465034, 1128997, 1260883, 743821, 1373431, 1781445, 832460, 536265, 1109188, 1124513, 1558712, 1327695, 960024, 1009528, 975504, 459876, 1574406, 57810, 612865, 1379691, 1666945, 235336, 813711, 1714989, 1167701, 1409712, 1740780, 449100, 437958, 364589, 969408, 1109513, 1211244, 1468072, 1444616, 786375, 587065, 1068446, 1498653, 330419, 1686123, 109786, 1535870, 584343, 348202, 1883296, 123268, 778418, 1298453, 120121, 372420, 1645619, 181656, 1870722, 1459819, 1002962, 1384571, 1139629, 767608, 1830278, 1197912, 1721810, 1865724, 124087, 1580256, 893158, 98494, 1740283, 1850468, 1321488, 1008743, 937886, 201133, 740664, 166319, 814662, 1046195, 316368, 341326, 596155, 1200947, 1771342, 260358, 754350, 1668118, 1810936, 486075, 1478941, 34444, 1661282, 1244997, 341518, 112605, 584452, 1055521, 665138, 779502, 348058, 1019834, 629733, 773249, 910934, 1476202, 955658, 1478743, 819955, 653808, 1328364, 49203, 1571608, 732508, 626427, 1354363, 1356188, 1891188, 1214764, 1226366, 1715260, 1217612, 198379, 530287, 1217256, 1248932, 669749, 1194898, 211738, 1719998, 1642300, 1742906, 1579487, 1193455, 1529378, 1455354, 1707305, 254185, 832096, 1781926, 1288655, 1302494, 625745, 1362584, 428942, 526661, 1453141, 722719, 276737, 1105449, 356503, 921311, 1597774, 372677, 2989, 1686176, 859784, 243201, 576155, 536699, 1456690, 813066, 532972, 246842, 871674, 1816977, 1532778, 1049267, 1897813, 797986, 1237478, 1192202, 1850315, 731851, 13854, 32938, 901792, 1534880, 666374, 1098668, 649686, 595620, 352627, 582127, 403635, 1054521, 879314, 593882, 713285, 1879352, 1402341, 1554367, 1564778, 74140, 767754, 263179, 1178603, 20143, 39638, 1368199, 1511352, 1665414, 1833938, 1839613, 801200, 955640, 150901, 337366, 100758, 73780, 318508, 1414282, 747116, 62423, 192501, 1081458, 414323, 274858, 1898105, 1473708, 1504453, 98660, 179326, 1593298, 1715570, 242744, 1070159, 663971, 477369, 192060, 1493376, 806135, 1672556, 1065690, 35310, 1340727, 1257028, 1305098, 228888, 376502, 659499, 142221, 106357, 636403, 65211, 1741373, 971870, 1059819, 940949, 83571, 939423, 1445972, 17193, 6185, 764794, 1142486, 860717, 619471, 1210369, 969380, 1353012, 322440, 81815, 409104, 408068, 1666128, 762044, 1196381, 798709, 436424, 554478, 620854, 1792431, 396264, 82568, 259739, 407400, 1423284, 896792, 1713335, 1401044, 1255737, 201037, 1246027, 146084, 1529593, 68844, 453406, 310956, 894504, 232273, 555921, 1337952, 1216089, 1427966, 1414167, 978997, 1614532, 1138564, 1831114, 140801, 1347251, 1363260, 603261, 1826035, 1018850, 1378909, 1736001, 1281596, 781942, 121918, 260393, 1758397, 373430, 822350, 342750, 1850247, 1610660, 171319, 1771733, 1021058, 575129, 1449388, 536789, 656096, 58041, 1777459, 920428, 191807, 1643922, 847375, 390177, 1700241, 1294215, 202063, 1203460, 1087778, 1077165, 1837359, 317749, 1135903, 1796179, 598295, 1742680, 85725, 1354356, 1237947, 884686, 1694734, 571840, 1797843, 1668100, 965414, 1699590, 1224413, 1177077, 484700, 1714334, 48051, 910505, 1539618, 152376, 523794, 1527126, 1017474, 1369606, 938814, 1266387, 1754826, 1334427, 161024, 817025, 1568496, 1819835, 1191237, 896859, 409841, 1427320, 1375313, 1359119, 77784, 189080, 775938, 1067706, 1866268, 1868235, 44591, 744486, 721198, 1566490, 1681252, 93063, 399749, 1645402, 568023, 1384627, 794568, 497973, 557400, 1610770, 1017527, 198132, 1192069, 1881086, 783054, 1655444, 1371901, 825752, 1744844, 486054, 686944, 1842383, 1605783, 331727, 300815, 1292932, 578245, 1212918, 151644, 738689, 1024614, 636900, 1043011, 1209115, 406802, 527519, 465760, 1807987, 1172409, 139253, 669296, 1374887, 1220022, 677941, 1580799, 476021, 373544, 1191806, 1632694, 833434, 603628, 1729534, 191416, 84023, 271269, 502861, 603309, 1478582, 1857941, 807654, 139537, 868616, 456136, 982531, 270691, 1168100, 616795, 885254, 101269, 1149149, 1281781, 854775, 191830, 198496, 3868, 562026, 462405, 1098538, 555413, 1496445, 1866358, 785101, 640180, 1569053, 1090791, 1767711, 1063500, 550288, 447511, 140349, 183718, 1221039, 1402725, 866306, 1261176, 735534, 436048, 1553622, 517130, 555712, 1135866, 902938, 859387, 638022, 1503466, 1032439, 1026565, 1271461, 955673, 930210, 1828842, 1898857, 26180, 1392380, 1164833, 869379, 1513972, 920264, 1405116, 1824609, 1092820, 341803, 804186, 1052989, 1593627, 1324009, 129279, 330235, 1484641, 536462, 62666, 214638, 1763083, 320345, 680643, 263572, 1815217, 101396, 1088869, 422891, 517352, 1482817, 55895, 97707, 503713, 619728, 1412763, 1803493, 376860, 1873083, 459425, 178861, 252788, 885537, 1804742, 1760892, 618674, 558494, 1646618, 244705, 403220, 501165, 1558830, 1578605, 177912, 792380, 99696, 469684, 695459, 1718579, 203172, 1212949, 1170117, 237241, 174134, 590236, 542314, 959587, 1355765, 1809698, 604410, 342554, 115831, 1177953, 1432500, 223878, 1204378, 772157, 1453785, 1025711, 1228840, 963160, 717162, 1479569, 1570950, 76210, 888631, 1691337, 1069659, 888609, 548, 582911, 1798391, 1142140, 1446802, 718955, 623345, 482885, 1426277, 339963, 375368, 1827739, 101742, 802995, 1433268, 54728, 1861529, 1502663, 1516312, 1087331, 1852817, 1306572, 613065, 438855, 1061008, 834396, 1717543, 438709, 1207412, 1887161, 1071744, 1484680, 1904472, 613271, 1888144, 757237, 48007, 1430162, 1645437, 728433, 1387245, 1085912, 192678, 1687625, 81534, 1087586, 1351806, 830139, 264613, 1403898, 509372, 740463, 371058, 1665978, 1031007, 1591710, 51361, 1143725, 1304454, 385864, 1694856, 547168, 1348415, 117934, 1882132, 946810, 593270, 1023986, 1627881, 223533, 70288, 1778756, 1234321, 1229935, 105572, 1076258, 1481169, 1389765, 1599429, 183748, 568591, 1853158, 274522, 1617084, 435441, 1733741, 68350, 1294244, 1687171, 531601, 621794, 332820, 606727, 1418297, 801630, 671079, 1453958, 1523064, 1052218, 1350417, 376897, 216450, 687814, 325320, 187598, 919011, 1490533, 4159, 1086762, 1521505, 749899, 471674, 1150706, 460567, 55454, 1739283, 1111446, 849598, 549043, 421055, 1349170, 945475, 811396, 536264, 1822741, 1117393, 1770586, 1364427, 554780, 421757, 141370, 158017, 1836175, 1363343, 1883484, 1351353, 1515207, 773442, 50243, 1176858, 1760450, 1609767, 599452, 340050, 1442675, 1301775, 1851244, 1452965, 829756, 1224523, 483764, 1020973, 368831, 1533995, 607740, 1627411, 696234, 807982, 474980, 808097, 1547719, 1056895, 1125400, 1063745, 170781, 434287, 6013, 1730263, 1059913, 1477760, 1737204, 109700, 561793, 414523, 49895, 400247, 166636, 1840143, 380007, 676063, 368987, 1464459, 849891, 1428809, 1368168, 877111, 1188660, 451968, 1034742, 1292492, 329177, 1805783, 1710018, 1761813, 496058, 85959, 1632121, 561786, 1624800, 713891, 160476, 43782, 1269944, 986475, 1153709, 525479, 396755, 1494670, 1821344, 1789776, 1859961, 1446805, 275162, 120223, 1726497, 351336, 1868389, 824508, 1063416, 1296248, 961939, 1709267, 293370, 1808265, 211764, 247416, 425308, 792015, 581877, 744723, 1763203, 592925, 1111240, 726904, 1782291, 1138660, 1093280, 596090, 1356814, 1315811, 421288, 1186961, 1260717, 237695, 511742, 414957, 508602, 660532, 142535, 410179, 1349414, 779037, 186866, 1660029, 739317, 1768646, 1084176, 1089834, 1323693, 592164, 1087976, 581485, 1713023, 523558, 526365, 168422, 181612, 1435493, 17001, 1059788, 217861, 715208, 1495505, 758790, 959006, 1760104, 296351, 1354734, 827654, 665803, 1721731, 1122917, 1681952, 1157714, 727688, 815825, 1090815, 1876537, 222364, 731410, 92163, 79379, 1881712, 1881542, 1588142, 1901418, 248994, 807697, 1213101, 1692811, 566187, 192322, 656099, 422900, 842838, 1793639, 1293206, 555415, 1810919, 1036307, 285121, 722780, 1739642, 1699842, 1752275, 1089342, 400351, 103975, 72043, 1526384, 418771, 1376841, 685385, 211822, 755838, 98360, 568513, 861762, 988913, 1022149, 383814, 1514915, 27942, 1018249, 360060, 908753, 841746, 811787, 1408037, 1848824, 272373, 1140842, 1702993, 1653532, 295243, 94969, 996570, 1873694, 784604, 1826353, 1696168, 196386, 801353, 334751, 688785, 999356, 1577918, 386734, 771776, 1260017, 900098, 123904, 357274, 524127, 293333, 1345169, 222899, 1732020, 1026399, 1034943, 994408, 672214, 1394530, 1428217, 1027516, 597829, 971259, 1770779, 1801365, 1766128, 1758490, 1040929, 178878, 1184668, 559865, 961647, 258860, 965463, 1587416, 999919, 1240231, 1100041, 1724628, 527846, 353659, 721728, 1005057, 786979, 468331, 1767216, 172796, 503370, 579398, 929733, 1136840, 346381, 18625, 261223, 1857380, 1516403, 1856859, 1538424, 206872, 581923, 1458598, 951600, 765832, 130934, 1206287, 1575061, 1384724, 73366, 837358, 649317, 1103628, 1254095, 778185, 331291, 981055, 1152635, 1293810, 1167393, 257464, 1828069, 1556626, 383037, 693396, 962191, 129228, 1562989, 1501210, 684893, 884259, 462200, 566135, 1076239, 625718, 909145, 241469, 1188413, 805084, 1069780, 1583991, 885966, 1887472, 1608117, 1632374, 1009773, 1776889, 1352066, 332831, 954145, 412434, 1475751, 547736, 1310451, 1297489, 615024, 903824, 1569633, 336020, 1036451, 1243709, 1578464, 778239, 323292, 185941, 1598957, 104642, 202609, 651670, 1458511, 559793, 103614, 1018721, 953059, 842346, 171623, 325958, 1212551, 117333, 582600, 193899, 472940, 1529891, 401042, 1845617, 444778, 1675578, 1719037, 1283601, 1887684, 728451, 185432, 1727744, 1060398, 232651, 230038, 1353000, 376695, 224266, 83237, 865588, 180058, 1421797, 1485589, 839564, 496711, 55619, 1786140, 486288, 1332723, 271069, 54512, 502449, 1135226, 1211366, 919959, 95469, 1321189, 1895021, 222880, 36543, 243545, 344803, 832662, 1191974, 442006, 682470, 909888, 1196466, 1004043, 238932, 1439300, 48346, 1214399, 941739, 458795, 1456424, 196128, 1539850, 468030, 35855, 1868844, 1477722, 47387, 1835367, 477226, 185908, 959276, 1590531, 2908, 692871, 123508, 1610921, 776550, 519250, 1797929, 1712775, 1427181, 1204167, 1262435, 1603331, 201774, 632390, 1624656, 501093, 1485763, 466905, 1392894, 1140436, 957960, 1657394, 713332, 15645, 1020127, 612181, 1721262, 1629588, 1146853, 412210, 542762, 1325428, 329855, 1699583, 1686919, 159086, 75369, 1588208, 924372, 1559928, 326922, 1105848, 636562, 1739440, 983501, 340623, 574632, 1491564, 1634827, 123958, 688270, 423176, 457933, 1881381, 144560, 453786, 1033943, 729709, 779332, 561313, 1342874, 549585, 491159, 1566232, 23103, 1836946, 853442, 1208816, 1247439, 411823, 193788, 1748544, 1156883, 1717296, 109489, 1034035, 257988, 545343, 1533229, 1627154, 1478545, 412169, 389002, 1766466, 1707094, 1796350, 438084, 120314, 1237211, 397114, 783616, 1241186, 688167, 1806638, 228615, 502178, 1030775, 1675675, 945858, 675281, 1440395, 642995, 398466, 419087, 374246, 401051, 435824, 584165, 1445307, 1643413, 1383288, 836371, 629704, 18243, 566717, 1868274, 333717, 1395746, 1003473, 1028303, 1589121, 1181785, 642035, 642415, 900356, 842476, 1563558, 1900780, 1458962, 1510711, 1468254, 1451681, 1106819, 492125, 1464230, 1775895, 204940, 130734, 75123, 1800415, 430871, 739286, 1687301, 10787, 921996, 469644, 431677, 1566347, 863294, 497614, 443046, 231351, 283881, 1676465, 1487672, 683175, 240590, 1689406, 49239, 1382614, 1226544, 503249, 301771, 521769, 1335790, 1365230, 474610, 49027, 593121, 1681597, 1720961, 1126166, 685811, 1151610, 401825, 1851262, 409423, 1269692, 1532593, 1510688, 1153914, 1898438, 820285, 1216454, 811693, 1244620, 407047, 1299891, 1591891, 560572, 1652898, 1212343, 1006414, 295172, 544132, 338490, 781073, 1410274, 384869, 1671709, 1468108, 629788, 1486127, 251071, 699991, 1196371, 1145197, 507197, 1434007, 1009030, 1702066, 101628, 936635, 987518, 1169963, 12145, 828983, 1261349, 211188, 990851, 637294, 1893551, 1196708, 135199, 138568, 856384, 1688615, 1168539, 996454, 1396847, 909763, 1032469, 242308, 314772, 1349909, 1400244, 1517544, 1214314, 401862, 1371319, 1326502, 1234935, 762857, 1402706, 1751495, 79844, 851570, 471787, 98083, 477024, 1327668, 1641959, 1115688, 779488, 811312, 505729, 185280, 1062220, 670812, 806581, 630091, 1844306, 545298, 119452, 1542668, 1268388, 150336, 1001036, 395588, 1156446, 40609, 1890770, 1759171, 950343, 934468, 796454, 1354662, 1305583, 953870, 1503225, 965890, 1695690, 99917, 1279765, 915465, 1703064, 1481285, 1517877, 801093, 597248, 1014289, 1186069, 104697, 1681026, 952588, 1074617, 860323, 669995, 386989, 306228, 382614, 431421, 258479, 969429, 1571875, 1178430, 1263393, 1215614, 1783068, 420417, 955251, 1891339, 112780, 824286, 152029, 1206841, 1189470, 1799151, 63048, 214886, 1186692, 288113, 324868, 314645, 292848, 1110475, 621504, 1839939, 1405275, 262314, 187941, 24725, 1186180, 1569330, 516178, 727973, 1350395, 345509, 1747728, 194155, 684573, 39914, 1316886, 414772, 1032832, 1644911, 1693786, 507644, 1314216, 1543829, 519163, 1840188, 174883, 1123824, 1869744, 187174, 1090902, 1533490, 490627, 92004, 370994, 1409804, 1088855, 1510076, 1050874, 549091, 1677137, 1370951, 1082364, 1472229, 1107070, 1820699, 1427719, 1804, 907614, 343281, 688115, 115900, 613467, 964592, 1864560, 731072, 1521308, 1262611, 720636, 1462686, 1733911, 784204, 181035, 206916, 253530, 1704477, 191130, 1608557, 199056, 584569, 229574, 1774367, 293587, 1075145, 522477, 608193, 571006, 1747165, 241835, 1705024, 1608448, 68815, 1310095, 60244, 327977, 283280, 1491046, 336296, 945269, 1714944, 138241, 524674, 644301, 791531, 1803260, 785555, 247375, 850417, 1133553, 1691583, 957932, 1229879, 169239, 429100, 1106727, 297916, 1587240, 8027, 1773659, 303213, 481051, 1604048, 832891, 1367798, 759717, 842712, 78431, 1033029, 1727742, 90794, 150710, 1815995, 113301, 1798393, 666630, 1269333, 1003908, 1312531, 679729, 79059, 99061, 1777432, 432706, 730602, 1268260, 320547, 1884516, 318935, 359641, 1008736, 1474755, 177255, 381980, 759387, 252143, 23191, 1587519, 1109115, 1275431, 712027, 1853564, 1016978, 1246790, 1314185, 1606469, 1008543, 1406640, 1447404, 413687, 626206, 1725723, 1330034, 1072110, 1553176, 246070, 49128, 1359106, 1181303, 1735459, 6748, 781646, 297309, 697302, 1045238, 1492749, 938551, 1708756, 1696951, 450167, 1526409, 634653, 1133301, 603761, 1112582, 1061651, 456766, 1749912, 374880, 1072755, 944290, 1621439, 596696, 423464, 138589, 472424, 1394340, 1262050, 1224489, 1241459, 471091, 1395409, 773571, 1653060, 1355832, 1683073, 957166, 122250, 1387968, 788461, 1115797, 1881463, 238146, 1432921, 248286, 1751831, 491054, 1041906, 1207465, 44433, 737729, 1494902, 54226, 1844989, 1642626, 1559047, 1840722, 413545, 832841, 771124, 619274, 1402156, 1052811, 1051752, 1359359, 216604, 475003, 1664258, 338755, 1850799, 1858341, 305792, 351956, 1286037, 994036, 884566, 955349, 1317353, 1480449, 800021, 976121, 468130, 1431162, 1625210, 1621859, 1523346, 1810495, 577797, 695497, 103857, 453229, 371806, 1186597, 933926, 1307670, 394877, 185633, 1712356, 1743406, 1742025, 436466, 926805, 842203, 1237828, 1264690, 647768, 143709, 65092, 574520, 556689, 745208, 706669, 1079334, 677135, 502606, 1471983, 129928, 523719, 534565, 330864, 1790347, 396515, 524376, 1727400, 656029, 305457, 1028721, 610071, 406048, 1786108, 1084401, 234861, 1722507, 823086, 1523725, 1206543, 830766, 615778, 1479811, 864267, 1853187, 698475, 323741, 15673, 855365, 1876370, 1389726, 39977, 390489, 383426, 1586957, 672743, 1310556, 1280736, 921997, 557396, 1453247, 1489654, 648707, 1349355, 1859425, 239306, 29985, 1583305, 1439561, 721671, 1661571, 576843, 919257, 953279, 896601, 485297, 756384, 721170, 467771, 1196711, 304778, 325565, 723054, 810363, 106716, 1460114, 345974, 1535244, 475131, 200492, 1171221, 961288, 1601169, 658996, 586843, 394320, 1039193, 1291880, 287217, 75452, 326827, 131608, 724263, 1452990, 210087, 776783, 662100, 361086, 1170987, 310162, 215816, 182838, 734821, 1259697, 480498, 1264053, 884526, 1515396, 1041812, 996673, 875152, 335603, 1460172, 1097669, 1812144, 951223, 841979, 563524, 1149679, 757347, 72096, 1688039, 1504616, 459497, 919501, 847953, 198684, 721663, 1699097, 77356, 490120, 159358, 604909, 1791409, 1138906, 1611458, 259665, 116237, 92854, 1030453, 742660, 204724, 62005, 10174, 57861, 265957, 771988, 1500774, 310788, 1290625, 1702071, 412062, 156225, 1771129, 787652, 1012834, 1172255, 120693, 1867811, 1692470, 1091110, 402728, 1765684, 1024370, 1422000, 980750, 1407817, 486176, 985317, 1124545, 810784, 715013, 331692, 760865, 150642, 1061575, 543943, 251274, 572690, 1229698, 883958, 430693, 955106, 46718, 565743, 553948, 418495, 528371, 1396926, 1416865, 19951, 809389, 1524859, 730443, 844061, 519454, 515792, 295397, 1255799, 1046449, 1460998, 360991, 1348818, 1527504, 1559555, 855642, 154406, 1767150, 1226146, 686113, 347212, 1348182, 407397, 261082, 777187, 1395980, 474763, 280462, 1158703, 949484, 1061107, 641371, 1468726, 1825322, 1089510, 1903843, 785092, 1700619, 130362, 65372, 480707, 201048, 1333915, 1817108, 1879442, 1091408, 1491802, 704189, 428410, 1587074, 11060, 590899, 101452, 856599, 142371, 1478362, 425419, 1138565, 296172, 763001, 1500158, 1845565, 1863250, 72769, 937322, 1008349, 1457288, 1431483, 1395476, 624359, 1792117, 1391431, 1882283, 1326567, 281716, 1116782, 1037447, 1458371, 1373325, 1339900, 1306623, 584317, 1113664, 409550, 111144, 756823, 930635, 241744, 1438440, 591581, 964913, 145327, 1155015, 994910, 544009, 685632, 503326, 233574, 770042, 1287414, 759536, 838610, 1752727, 1390092, 1491458, 969709, 1893029, 207194, 556223, 873274, 401193, 658348, 574087, 1231300, 18344, 1525, 1373955, 549079, 1453716, 1721682, 797512, 1079673, 1138630, 931879, 27265, 1168358, 1856848, 164211, 1703501, 556301, 167435, 1360910, 1452293, 26274, 984062, 662758, 323760, 1791865, 134842, 591714, 479067, 1523389, 1885633, 417069, 350630, 1645907, 575178, 615491, 1490260, 1886501, 1601581, 559451, 551054, 679761, 1447424, 1277671, 698389, 259589, 88304, 501054, 738368, 96771, 1471981, 982442, 1790251, 566017, 1111848, 1699643, 847608, 1045505, 1088741, 1831280, 1223, 1461718, 1901116, 1645354, 260919, 1126497, 524467, 1403270, 1040894, 494862, 1524505, 468179, 244260, 858373, 1212122, 1102928, 1466668, 1729068, 701004, 1542410, 140544, 1805375, 1066997, 290521, 584677, 158526, 1729303, 429017, 1252263, 65780, 1467337, 741756, 668695, 1031916, 1260101, 558329, 24856, 1338759, 713126, 1632583, 720867, 1853274, 135274, 440412, 1353925, 1817130, 1809902, 1735844, 1887659, 1148221, 963504, 1106755, 965824, 1466895, 542336, 1754520, 333926, 935330, 434481, 691842, 281699, 273560, 1339872, 1408125, 331697, 1154947, 1426649, 1101559, 970067, 214690, 1310748, 641063, 655516, 416536, 905933, 38561, 63781, 1576787, 638694, 217987, 10339, 927806, 986699, 706384, 60300, 388797, 1233444, 197123, 1730174, 503592, 1632854, 854984, 85507, 721006, 823849, 508219, 1642988, 889736, 411230, 1197619, 780218, 1410073, 1408006, 1484722, 1201833, 1507344, 1180777, 1331901, 1872974, 365996, 80867, 871384, 785895, 163895, 1712692, 1362881, 1852040, 576834, 1572454, 742675, 714587, 1524189, 84192, 171067, 828508, 12284, 71644, 638028, 1897745, 1208102, 375148, 1623436, 1312080, 279917, 1003402, 228541, 1252885, 946915, 563214, 1356937, 915194, 70471, 1619648, 1432307, 716101, 929367, 1815155, 1148535, 663516, 1532265, 1814999, 1128472, 1038026, 208948, 1662100, 1840368, 1785735, 279422, 160465, 729338, 1162472, 225473, 1663234, 1301382, 534238, 418450, 1323100, 473454, 1865678, 1255316, 845315, 1248470, 991377, 1135059, 418967, 1356534, 1215974, 182115, 1154750, 17450, 642728, 1243018, 804521, 1739176, 1487620, 1388290, 1437953, 283759, 404045, 1115474, 911833, 718488, 214190, 732544, 984945, 189850, 589977, 222378, 228650, 1867229, 434056, 1478434, 54108, 1259925, 1370983, 1772574, 407448, 605242, 819993, 543718, 1367471, 752479, 351579, 1781752, 612229, 674495, 1019135, 748321, 1555902, 1000582, 1875869, 1353875, 120528, 1567362, 754954, 780969, 162879, 1472678, 238192, 1132133, 1202400, 84199, 1519718, 936694, 753750, 1810053, 1241817, 495450, 1012875, 1393966, 1142654, 901773, 429121, 1628653, 1552299, 1889914, 765218, 1563942, 459707, 347459, 390751, 463948, 1189361, 192372, 319168, 430077, 1862153, 1545424, 1415016, 684976, 31064, 94107, 180647, 1310773, 773138, 636932, 604946, 973250, 1167181, 1890001, 661025, 341104, 1691558, 1766320, 1295394, 1671671, 53239, 1723605, 1252156, 211442, 156956, 788644, 1714561, 1815889, 53421, 1565205]

    test_problem = GraphV2Problem(problem_type="Metric TSP", n_nodes=n_nodes, selected_ids=selected_ids,
                                  cost_function="Geom", dataset_ref="World_TSP")

    test_problem.edges = mock.recreate_edges(test_problem)

    print("edges", test_problem.edges)
    print("Problem", test_problem)

    lkh_solver = LKHSolver(problem_types=[test_problem])
    start_time = time.time()

    # Run the solver to get the tour
    route = asyncio.run(lkh_solver.solve_problem(test_problem))

    # Calculate total distance of the tour
    total_distance = lkh_solver.calculate_total_distance(route, test_problem.edges)

    print(f"{lkh_solver.__class__.__name__} Tour: {route}")
    print(f"Total distance of the tour: {total_distance}")
    print(f"{lkh_solver.__class__.__name__} Time Taken for {n_nodes} Nodes: {time.time() - start_time}")